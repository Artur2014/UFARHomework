#include <iostream>
#include <vector>
class Stack {
private:
    std::vector<int> stack;

public:
    void push(int value) {
        stack.push_back(value);
    }

    void pop() {
        if (stack.empty()) {
            std::cout << "Stack is empty!" << std::endl;
        }
        else {
            stack.pop_back();
        }
    }

    int top() {
        if (stack.empty()) {
            std::cout << "Stack is empty!" << std::endl;
            return -1;
        }
        else {
            return stack.back();
        }
    }

    bool isEmpty() {
        return stack.empty();
    }

    int size() {
        return stack.size();
    }
};

int main() {
    Stack s;

    s.push(10);
    s.push(20);
    s.push(30);

    std::cout << "Top element: " << s.top() << std::endl;

    s.pop();
    std::cout << "Top element after pop: " << s.top() << std::endl;

    std::cout << "Stack size: " << s.size() << std::endl;

    return 0;
}


void shellSort(std::vector<int>& arr) {
    int n = arr.size();

   
    for (int gap = n / 2; gap > 0; gap /= 2) {
        
        for (int i = gap; i < n; i++) {
            int temp = arr[i];
            int j;

            for (j = i; j >= gap && arr[j - gap] > temp; j -= gap) {
                arr[j] = arr[j - gap];
            }

            arr[j] = temp;
        }
    }
}

int main() {
    std::vector<int> arr = { 12, 34, 54, 2, 3 };

    std::cout << "Original array: ";
    for (int i : arr)
        std::cout << i << " ";
    std::cout << std::endl;

    shellSort(arr);

    std::cout << "Sorted array: ";
    for (int i : arr)
        std::cout << i << " ";
    std::cout << std::endl;

    return 0;
}
